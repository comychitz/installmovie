#!/bin/bash

# puts subtitle file into mp4 file and moves it to the auto installation
# directory for TV on macOS.

scriptname=$(basename "${0}")
destination=~/Music/iTunes/iTunes\ Media/Automatically\ Add\ to\ TV.localized/

usage() { 
    echo "Usage: $scriptname [-m <path>] [-s <path>] [-n <name>]" 1>&2; 

    echo "Example: "
    echo "$ $scriptname -m path/to/movie/file.mp4 -s path/to/subtitle/file.srt -n optionalName.mp4"
    exit 1
}

while getopts "n:m:s:" o; do
    case "${o}" in
        s)
            s=${OPTARG} ;;
        m)
            m=${OPTARG} ;;
        n)
            n=${OPTARG} ;;
        *)
            usage ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${m}" ]; then
    usage
fi

if [ -z "${n}" ]; then
    n=$(basename "${m}")
fi

ln -s ~/Music/iTunes/iTunes\ Media/Automatically\ Add\ to\ TV.localized/ wormhole

echo "Installing '${n}'..."

output="/tmp/${n}"

subtitleArgs=""
if [ ! -z "${s}" ]; then
    subtitleArgs="-i ${s}"
fi

if [ "${m: -4}" = ".mkv" ]; then
    echo "Detected .mkv file type, converting to .m4v..."
    inputFileName=$(basename ${m})
    temporary="/tmp/${inputFileName%.mkv}-input.m4v"
    ffmpeg -i ${m} -c copy ${temporary} &>/dev/null  
    m=${temporary}
fi

ffmpeg -i ${m} ${subtitleArgs} -c copy -c:s mov_text "${output}" &>/dev/null && mv "${output}" "${destination}"

result=$?
if [ $result -ne 0 ]; then
    echo "FAILED"
    exit 1
fi

#
# cleanup
#
if [ ! -z "${temporary}" ]; then
    rm ${temporary}
fi
rm -f wormhole

echo "Done"

